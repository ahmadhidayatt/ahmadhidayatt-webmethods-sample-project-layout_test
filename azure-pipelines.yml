trigger:
- main

variables:
- group: SAG_SETTINGS
- name: PROJECT_NAME
  value: $(Build.DefinitionName)

pool:
  name: Default  # Self-hosted Windows agent

stages:
# ------------------------------------------
# BUILD STAGE
# ------------------------------------------
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self

    - script: |
        echo Starting Build...
        call "%SAG_HOME%\common\lib\ant\bin\ant" -DSAGHome=%SAG_HOME% ^
             -DSAG_CI_HOME=%SAG_CI_HOME% -DprojectName=%PROJECT_NAME% build
      displayName: 'Build with Ant'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'target/$(PROJECT_NAME)/build'
        ArtifactName: BuildOutput
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'


# ------------------------------------------
# DEPLOY STAGE
# ------------------------------------------
- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployJob
    steps:
    - download: current
      artifact: BuildOutput

    - script: |
        echo ==== Checking BuildOutput content ====
        dir "$(Pipeline.Workspace)\BuildOutput" /s
      displayName: 'Check Artifact Content'

    - script: |
        echo Starting Deploy...
        call "%SAG_HOME%\common\lib\ant\bin\ant" -DSAGHome=%SAG_HOME% ^
             -DSAG_CI_HOME=%SAG_CI_HOME% -DprojectName=%PROJECT_NAME% ^
             -DpathProjectdefinitionFile=$(Pipeline.Workspace)\BuildOutput\IS\deploymentProject.xml deploy
      displayName: 'Deploy with Ant'


# ------------------------------------------
# TEST STAGE
# ------------------------------------------
- stage: Test
  dependsOn: Deploy
  jobs:
  - job: TestJob
    steps:
    - download: current
      artifact: BuildOutput

    - script: |
        echo Starting Test...
        call "%SAG_HOME%\common\lib\ant\bin\ant" -DSAGHome=%SAG_HOME% ^
             -DSAG_CI_HOME=%SAG_CI_HOME% -DprojectName=%PROJECT_NAME% test
      displayName: 'Test with Ant'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/report/*.xml'
        failTaskOnFailedTests: true
      displayName: 'Publish JUnit Test Results'
